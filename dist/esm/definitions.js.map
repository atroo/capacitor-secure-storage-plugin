{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAKA,MAAM,CAAC,MAAM,oBAAoB,GAAoB;IACnD,kBAAkB;IAClB,gCAAgC;IAChC,cAAc;IACd,4BAA4B;IAC5B,QAAQ;IACR,sBAAsB;IACtB,+BAA+B;CAChC,CAAC","sourcesContent":["/**\n * allows to define how properties can be accessed on iOS\n */\nexport type Accessibility = 'afterFirstUnlock' | 'afterFirstUnlockThisDeviceOnly' | 'whenUnlocked' | 'whenUnlockedThisDeviceOnly' | 'always' | 'alwaysThisDeviceOnly' | 'whenPasscodeSetThisDeviceOnly'\n\nexport const accessibilityOptions: Accessibility[] = [\n  'afterFirstUnlock',\n  'afterFirstUnlockThisDeviceOnly',\n  'whenUnlocked',\n  'whenUnlockedThisDeviceOnly',\n  'always',\n  'alwaysThisDeviceOnly',\n  'whenPasscodeSetThisDeviceOnly'\n];\n\n/**\n * allows to define how properties can be accessed on iOS\n */\nexport interface SetDataOptions {\n  key: string\n  value: string\n  accessibility: Accessibility\n}\n/**\n * The SecureStoragePlugin plugin interface\n */\nexport interface SecureStoragePlugin {\n  /**\n   * gets the value for the given key\n   * \n   * @param options key to get value for\n   * @returns value for the given key\n   */\n  get(options: { key: string }): Promise<{ value: string }>;\n  /**\n   * gets the accessibility for the given key\n   * \n   * @param options key to get accessibility for\n   * @returns accessibility for the given key\n   */\n  getAccessibility(options: { key: string }): Promise<{ value: string|undefined }>;\n  /**\n   * sets the value for the given key\n   * \n   * @param options key and value to set\n   * @returns true if the value was set successfully\n   */\n  set(options: SetDataOptions): Promise<{ value: boolean }>;\n  /**\n   * removes the value for the given key\n   * \n   * @param options key to remove value for\n   * @returns true if the value was removed successfully\n   */\n  remove(options: { key: string }): Promise<{ value: boolean }>;\n  /**\n   * clears all values\n   * \n   * @returns true if all values were removed successfully\n   */\n  clear(): Promise<{ value: boolean }>;\n  /**\n   * gets all keys\n   * \n   * @returns all keys\n   */\n  keys(): Promise<{ value: string[] }>;\n  /**\n   * gets the platform\n   * \n   * @returns the platform\n   */\n  getPlatform(): Promise<{ value: string }>;\n}\n"]}