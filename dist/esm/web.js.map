{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,sBAAuB,SAAQ,SAAS;IAArD;;QACE,WAAM,GAAG,UAAU,CAAC;QA2CZ,cAAS,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;IACzD,CAAC;IA1CC,GAAG,CAAC,OAAwB;QAC1B,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/D,IAAI,IAAI,KAAK,IAAI,EAAE;YACjB,OAAO,OAAO,CAAC,OAAO,CAAC;gBACrB,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;aAClB,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,OAAO,CAAC,MAAM,CAAC,oCAAoC,CAAC,CAAC;SAC7D;IACH,CAAC;IAED,gBAAgB,CAAC,QAAyB;QACxC,wBAAwB;QACxB,OAAO,OAAO,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;IAClD,CAAC;IAED,GAAG,CAAC,OAAuB;QACzB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QACvE,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,MAAM,CAAC,OAAwB;QAC7B,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACrD,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,KAAK;QACH,KAAK,MAAM,GAAG,IAAI,YAAY,EAAE;YAC9B,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBAClC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aAC9B;SACF;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,IAAI;QACF,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACnF,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,WAAW;QACT,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IAC3C,CAAC;CAGF;AAED,MAAM,mBAAmB,GAAG,IAAI,sBAAsB,EAAE,CAAC;AAEzD,OAAO,EAAE,mBAAmB,EAAE,CAAC","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { SetDataOptions } from '.';\nimport { Accessibility, SecureStoragePlugin } from './definitions';\n\nexport class SecureStoragePluginWeb extends WebPlugin implements SecureStoragePlugin {\n  PREFIX = 'cap_sec_';\n\n  get(options: { key: string }): Promise<{ value: string }> {\n    const item = localStorage.getItem(this.addPrefix(options.key));\n    if (item !== null) {\n      return Promise.resolve({\n        value: atob(item),\n      });\n    } else {\n      return Promise.reject('Item with given key does not exist');\n    }\n  }\n\n  getAccessibility(_options: { key: string }): Promise<{ value: Accessibility|undefined }> {\n    // Always rejects on web\n    return Promise.reject('not implemented on web');\n  }\n\n  set(options: SetDataOptions): Promise<{ value: boolean }> {\n    localStorage.setItem(this.addPrefix(options.key), btoa(options.value));\n    return Promise.resolve({ value: true });\n  }\n  remove(options: { key: string }): Promise<{ value: boolean }> {\n    localStorage.removeItem(this.addPrefix(options.key));\n    return Promise.resolve({ value: true });\n  }\n  clear(): Promise<{ value: boolean }> {\n    for (const key in localStorage) {\n      if (key.indexOf(this.PREFIX) === 0) {\n        localStorage.removeItem(key);\n      }\n    }\n    return Promise.resolve({ value: true });\n  }\n  keys(): Promise<{ value: string[] }> {\n    const keys = Object.keys(localStorage).filter((k) => k.indexOf(this.PREFIX) === 0);\n    return Promise.resolve({ value: keys });\n  }\n\n  getPlatform(): Promise<{ value: string }> {\n    return Promise.resolve({ value: 'web' });\n  }\n\n  private addPrefix = (key: string) => this.PREFIX + key;\n}\n\nconst SecureStoragePlugin = new SecureStoragePluginWeb();\n\nexport { SecureStoragePlugin };\n"]}